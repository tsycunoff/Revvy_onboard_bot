import logging
import os

from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from aiogram.utils.markdown import text, bold, hlink # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–º–µ–Ω–∏ 'YOUR_TELEGRAM_BOT_API_TOKEN' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
API_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', 'YOUR_TELEGRAM_BOT_API_TOKEN')
if API_TOKEN == 'YOUR_TELEGRAM_BOT_API_TOKEN':
    logging.warning("Warning: Replace 'YOUR_TELEGRAM_BOT_API_TOKEN' with your actual bot token!")

# –°—Å—ã–ª–∫–∏ (–ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ò –†–ï–ê–õ–¨–ù–´–ï –°–°–´–õ–ö–ò!)
REGISTRATION_URL = "https://revvy.prmonline.ru"
REFERRAL_REGULATIONS_URL = "https://revvy-space.teamly.ru/space/ce9ca057-8849-476c-a3fb-8c0935f1746c/article/d29f7b00-2a54-41ec-9b89-4ef277ebb9d3" # –ü—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏!
INTEGRATOR_REGULATIONS_URL = "https://revvy-space.teamly.ru/space/ce9ca057-8849-476c-a3fb-8c0935f1746c/article/d29f7b00-2a54-41ec-9b89-4ef277ebb9d3" # –ü—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏!
MATERIALS_URL = "https://revvy-space.teamly.ru/space/ce9ca057-8849-476c-a3fb-8c0935f1746c/article/d29f7b00-2a54-41ec-9b89-4ef277ebb9d3" # –ü—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏!
MANAGER_CONTACT_LINK = "https://t.me/v_tsykunov" # –õ—É—á—à–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ –¢–ì
MANAGER_CONTACT_EMAIL = "v.tsykunov@revvy.ru"
PARTNER_CABINET_URL = "https://revvy.prmonline.ru"
VIDEO_INSTRUCTION_URL = "https://revvy-space.teamly.ru/space/ce9ca057-8849-476c-a3fb-8c0935f1746c/article/d29f7b00-2a54-41ec-9b89-4ef277ebb9d3" # –ü—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏!

# –¢–µ–∫—Å—Ç—ã (–¥–ª—è –ª–µ–≥–∫–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
TEXTS_RU = {
    "welcome": "üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É Revvy!</b>\n\n–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ –∫ –Ω–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.\n\n–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å:",
    "choose_role": "üëá <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:</b>",
    "role_referral_btn": "ü§ù –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å Revvy (–†–µ—Ñ–µ—Ä–∞–ª)",
    "role_integrator_btn": "‚öôÔ∏è –ü—Ä–æ–¥–∞–≤–∞—Ç—å –∏ –ø–æ–¥–∫–ª—é—á–∞—Ç—å (–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä)",
    "referral_info": lambda reg_link=REGISTRATION_URL: text(
        "üëã <b>–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å.</b>\n\n",
        "–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å Revvy —Å–≤–æ–∏–º –∑–Ω–∞–∫–æ–º—ã–º –∏–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞–º –∏ –ø–æ–ª—É—á–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –∫–∞–∂–¥—É—é —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É –æ—Ç –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –≤–∞–º–∏ –∫–æ–º–ø–∞–Ω–∏–π.\n\n",
        "‚ú® <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n",
        "   - –õ–µ–≥–∫–∏–π —Å—Ç–∞—Ä—Ç, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≥–ª—É–±–æ–∫–∏—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–Ω–∏–π.\n",
        "   - –ü–æ–ª—É—á–∞–µ—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç —Å –æ–ø–ª–∞—Ç –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –ø–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç —Å –Ω–∞–º–∏.\n",
        "   - –ú—ã —Å–∞–º–∏ –∑–∞–Ω–∏–º–∞–µ–º—Å—è –ø—Ä–æ–¥–∞–∂–µ–π, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n\n",
        "üëá <b>–í–∞—à–∏ –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏:</b>\n",
        f"1Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {hlink('–û—Ç–∫—Ä—ã—Ç—å –∫–∞–±–∏–Ω–µ—Ç', reg_link)}\n",
        "2Ô∏è‚É£ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥–µ—Ç–∞–ª—è–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n",
        "3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –≤–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –∫–∞–±–∏–Ω–µ—Ç–µ.\n",
        "4Ô∏è‚É£ –ù–∞—á–∏–Ω–∞–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å!",
    ),
    "integrator_info": lambda reg_link=REGISTRATION_URL: text(
        "üöÄ <b>–°—É–ø–µ—Ä! –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–æ–¥–µ–ª—å –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–∞.</b>\n\n",
        "–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–¥–∞–≤–∞—Ç—å Revvy, –ø–æ–¥–∫–ª—é—á–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–º –ø–µ—Ä–≤—É—é –ª–∏–Ω–∏—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ó–∞ —ç—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è.\n\n",
        "‚ú® <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n",
        "   - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è.\n",
        "   - –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø—Ä–æ—Ü–µ—Å—Å–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.\n",
        "   - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.\n\n",
        "üëá <b>–í–∞—à–∏ –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏:</b>\n",
        f"1Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ: {hlink('–û—Ç–∫—Ä—ã—Ç—å –∫–∞–±–∏–Ω–µ—Ç', reg_link)}\n",
        "2Ô∏è‚É£ –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç.\n",
        "3Ô∏è‚É£ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –æ–±—É—á–∞—é—â–∏–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏.\n",
        "4Ô∏è‚É£ –°–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è —Å—Ç–∞—Ä—Ç–∞.",
    ),
    "onboarding_checklist_title": "üìã <b>–í–∞—à —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è —Å—Ç–∞—Ä—Ç–∞:</b>\n\n–ü—Ä–æ–π–¥–∏—Ç–µ –ø–æ —à–∞–≥–∞–º, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–µ–µ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å:",
    "onboarding_step1_btn": "1. üîë –û—Ç–∫—Ä—ã—Ç—å/–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞–±–∏–Ω–µ—Ç",
    "onboarding_step2_referral_btn": "2. üìÑ –ü—Ä–æ—á–∏—Ç–∞—Ç—å —Ä–µ—Ñ. —Ä–µ–≥–ª–∞–º–µ–Ω—Ç",
    "onboarding_step2_integrator_btn": "2. üìò –ü—Ä–æ—á–∏—Ç–∞—Ç—å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–∞",
    "onboarding_step3_materials_btn": "3. üß∞ –ò–∑—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –≤–∏–¥–µ–æ",
    "onboarding_step4_manager_btn": "4. üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É",
    "onboarding_step5_ready_btn": "‚úÖ –Ø –≤—Å—ë –∏–∑—É—á–∏–ª(–∞) –∏ –≥–æ—Ç–æ–≤(–∞) —Ä–∞–±–æ—Ç–∞—Ç—å!",
    "onboarding_complete": "üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!</b>\n\n–ñ–µ–ª–∞–µ–º –≤–∞–º —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫, –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –≤—ã—Å–æ–∫–æ–≥–æ –¥–æ—Ö–æ–¥–∞ —Å Revvy!\n\nüí¨ –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –≤–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É.\nüí° –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –∏ –Ω–∞—à–∏—Ö –∫–∞–Ω–∞–ª–∞—Ö!",
    "faq_button": "‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)",
    "faq_title": "ü§î <b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:",
    "faq_q1": "–ö–∞–∫ —Å—á–∏—Ç–∞—é—Ç—Å—è —É—Ä–æ–≤–Ω–∏ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤?",
    "faq_a1": "–£—Ä–æ–≤–Ω–∏ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ (–ë—Ä–æ–Ω–∑–æ–≤—ã–π, –°–µ—Ä–µ–±—Ä—è–Ω—ã–π, –ó–æ–ª–æ—Ç–æ–π, –ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π) –∑–∞–≤–∏—Å—è—Ç –æ—Ç <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∞–ª–ª–æ–≤</b>, –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ <b>90 –¥–Ω–µ–π</b>.\n\n–ë–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∑–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –æ–ø–ª–∞—Ç—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤, –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è –∏ —Ç.–¥. –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å, —Ç–µ–º –±–æ–ª—å—à–µ –≤–∞—à–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ–Ω—É—Å—ã.\n\n–ü–æ–¥—Ä–æ–±–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –±–∞–ª–ª–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π –µ—Å—Ç—å –≤ <a href='{regulation_url}'>—Ä–µ–≥–ª–∞–º–µ–Ω—Ç–µ</a>.", # –ó–∞–º–µ–Ω–∏ {regulation_url}
    "faq_q2": "–ö–æ–≥–¥–∞ —è –ø–æ–ª—É—á—É –≤—ã–ø–ª–∞—Ç—É?",
    "faq_a2": "–í—ã–ø–ª–∞—Ç—ã –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–≥–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è <b>–µ–∂–µ–º–µ—Å—è—á–Ω–æ</b>, –æ–±—ã—á–Ω–æ –¥–æ 15 —á–∏—Å–ª–∞ –º–µ—Å—è—Ü–∞, —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞ –æ—Ç—á—ë—Ç–Ω—ã–º. \n\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–∞ –≤ –≤–∞—à–µ–º –¥–æ–≥–æ–≤–æ—Ä–µ –∏–ª–∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.",
    "faq_q3_referral": "–ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ (—Ä–µ—Ñ–µ—Ä–∞–ª)?",
    "faq_a3_referral": "–û—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ! –í –≤–∞—à–µ–º –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ (<a href='{cabinet_url}'>—Å—Å—ã–ª–∫–∞</a>) –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å–≤–æ—é <b>—É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É</b>. \n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–º—É –∫–ª–∏–µ–Ω—Ç—É. –ö–æ–≥–¥–∞ –æ–Ω –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ –Ω–µ–π –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è/–æ–ø–ª–∞—Ç–∏—Ç, –æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–µ–ø–∏—Ç—Å—è –∑–∞ –≤–∞–º–∏. –¢–∞–∫–∂–µ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ñ–æ—Ä–º–∞ –¥–ª—è —Ä—É—á–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ª–∏–¥–∞.", # –ó–∞–º–µ–Ω–∏ {cabinet_url}
    "faq_q3_integrator": "–ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ (–∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä)?",
    "faq_a3_integrator": "–ö–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä, –≤—ã –æ–±—ã—á–Ω–æ —Å–∞–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ–æ—Ä–º—É –∏–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ (<a href='{cabinet_url}'>—Å—Å—ã–ª–∫–∞</a>). \n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —Å–ª–µ–¥—É–µ—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –∏–∑ –æ–±—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–∞—à–∏–º –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.", # –ó–∞–º–µ–Ω–∏ {cabinet_url}
    "faq_q4": "–ì–¥–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–ª—ã –∏ –ø—Ä–∏–∑—ã?",
    "faq_a4": "–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –±–∞–ª–ª–∞—Ö, —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ, –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∏–∑–∞—Ö (–µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –ø—Ä–æ–≥—Ä–∞–º–º–æ–π) –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º <b>–ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Revvy</b> (<a href='{cabinet_url}'>—Å—Å—ã–ª–∫–∞</a>).\n\n–û–±—ã—á–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–ë–∞–ª–ª—ã' –∏–ª–∏ '–ú–æ–π —É—Ä–æ–≤–µ–Ω—å'.", # –ó–∞–º–µ–Ω–∏ {cabinet_url}
    "faq_back_btn": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º",
    "action_cancelled": "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
    "unknown_command": "ü§î –ö–∞–∂–µ—Ç—Å—è, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å —Å /start –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏.",
    "state_reset": "–•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å–Ω–∞—á–∞–ª–∞. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:",
}

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
storage = MemoryStorage()
bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(bot, storage=storage)

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è FSM ---
class OnboardingStates(StatesGroup):
    awaiting_role = State()
    onboarding_referral = State()
    onboarding_integrator = State()
    showing_faq = State()
    showing_faq_answer = State() # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ FAQ

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
def get_role_kb():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏."""
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton(TEXTS_RU["role_referral_btn"], callback_data="role_referral"),
        InlineKeyboardButton(TEXTS_RU["role_integrator_btn"], callback_data="role_integrator")
    )
    return keyboard

def get_onboarding_kb(role: str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏."""
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton(TEXTS_RU["onboarding_step1_btn"], url=PARTNER_CABINET_URL)
    )
    if role == 'referral':
        keyboard.add(InlineKeyboardButton(TEXTS_RU["onboarding_step2_referral_btn"], url=REFERRAL_REGULATIONS_URL))
    else: # integrator
        keyboard.add(InlineKeyboardButton(TEXTS_RU["onboarding_step2_integrator_btn"], url=INTEGRATOR_REGULATIONS_URL))

    keyboard.add(
        InlineKeyboardButton(TEXTS_RU["onboarding_step3_materials_btn"], url=MATERIALS_URL),
        InlineKeyboardButton(TEXTS_RU["onboarding_step4_manager_btn"], url=MANAGER_CONTACT_LINK), # –°—Å—ã–ª–∫–∞ –Ω–∞ –¢–ì –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ
        InlineKeyboardButton(TEXTS_RU["onboarding_step5_ready_btn"], callback_data="onboard_done")
    )
    return keyboard

def get_faq_kb(role: str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ FAQ."""
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton(TEXTS_RU["faq_q1"], callback_data="faq_q1"),
        InlineKeyboardButton(TEXTS_RU["faq_q2"], callback_data="faq_q2"),
    )
    if role == 'referral':
        keyboard.add(InlineKeyboardButton(TEXTS_RU["faq_q3_referral"], callback_data="faq_q3_referral"))
    else:
        keyboard.add(InlineKeyboardButton(TEXTS_RU["faq_q3_integrator"], callback_data="faq_q3_integrator"))
    keyboard.add(
        InlineKeyboardButton(TEXTS_RU["faq_q4"], callback_data="faq_q4")
        # –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å—é–¥–∞ –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ FAQ –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    )
    return keyboard

def get_back_to_faq_kb():
    """–ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤ FAQ."""
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(TEXTS_RU["faq_back_btn"], callback_data="faq_back"))
    return keyboard

# --- –•–µ–Ω–¥–ª–µ—Ä—ã ---

# /start –∫–æ–º–∞–Ω–¥–∞
@dp.message_handler(commands=['start'], state='*')
async def send_welcome(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥."""
    await state.finish() # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∑–≤–∞–ª /start –ø–æ—Å—Ä–µ–¥–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
    await message.answer(TEXTS_RU["welcome"])
    await message.answer(TEXTS_RU["choose_role"], reply_markup=get_role_kb())
    await OnboardingStates.awaiting_role.set()
    # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞
    await message.answer("...", reply_markup=ReplyKeyboardRemove(), show_alert=False)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
@dp.callback_query_handler(lambda c: c.data.startswith('role_'), state=OnboardingStates.awaiting_role)
async def process_role_choice(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ä–æ–ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞."""
    await bot.answer_callback_query(callback_query.id)
    role = callback_query.data.split('_')[1] # 'referral' or 'integrator'
    await state.update_data(chosen_role=role) # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ–ª—å –≤ FSM data

    info_text = ""
    next_state = None
    if role == 'referral':
        info_text = TEXTS_RU["referral_info"]()
        next_state = OnboardingStates.onboarding_referral
        await state.set_state(next_state)
    elif role == 'integrator':
        info_text = TEXTS_RU["integrator_info"]()
        next_state = OnboardingStates.onboarding_integrator
        await state.set_state(next_state)
    else:
        # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫
        await callback_query.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–æ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ /start")
        await state.finish()
        return

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–±–∏—Ä–∞—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
    await callback_query.message.edit_text(f"{callback_query.message.text}\n\n<i>–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {TEXTS_RU[f'role_{role}_btn']}</i>")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏ –∏ —á–µ–∫-–ª–∏—Å—Ç
    await callback_query.message.answer(info_text, disable_web_page_preview=True)
    await callback_query.message.answer(TEXTS_RU["onboarding_checklist_title"], reply_markup=get_onboarding_kb(role))
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É FAQ –ø–æ–¥ —á–µ–∫-–ª–∏—Å—Ç–æ–º
    faq_kb = InlineKeyboardMarkup().add(InlineKeyboardButton(TEXTS_RU["faq_button"], callback_data="show_faq"))
    await callback_query.message.answer("–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? üëá", reply_markup=faq_kb)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–Ø –≥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å"
@dp.callback_query_handler(lambda c: c.data == 'onboard_done', state=[OnboardingStates.onboarding_referral, OnboardingStates.onboarding_integrator])
async def process_onboarding_complete(callback_query: types.CallbackQuery, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥."""
    await bot.answer_callback_query(callback_query.id)
    # –ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —á–µ–∫-–ª–∏—Å—Ç–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        # –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–µ–∫-–ª–∏—Å—Ç–æ–º (–æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–µ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å –∫–Ω–æ–ø–∫–æ–π FAQ)
        await bot.edit_message_reply_markup(chat_id=callback_query.message.chat.id,
                                            message_id=callback_query.message.message_id -1, # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                                            reply_markup=None)
    except Exception as e:
        logging.warning(f"Could not edit previous message markup: {e}")
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏–º –∫–Ω–æ–ø–∫–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ
        await callback_query.message.edit_reply_markup(reply_markup=None)


    await callback_query.message.answer(TEXTS_RU["onboarding_complete"])
    await state.finish() # –ó–∞–≤–µ—Ä—à–∞–µ–º FSM


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å FAQ"
@dp.callback_query_handler(lambda c: c.data == 'show_faq', state=[OnboardingStates.onboarding_referral, OnboardingStates.onboarding_integrator, OnboardingStates.showing_faq_answer])
async def process_show_faq(callback_query: types.CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é FAQ."""
    await bot.answer_callback_query(callback_query.id)
    user_data = await state.get_data()
    role = user_data.get('chosen_role', 'referral') # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–µ—Ñ–µ—Ä–∞–ª, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —Å—Ç–µ–π—Ç –ø–æ—Ç–µ—Ä—è–ª—Å—è

    await callback_query.message.edit_text(TEXTS_RU["faq_title"], reply_markup=get_faq_kb(role))
    await OnboardingStates.showing_faq.set()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ FAQ
@dp.callback_query_handler(lambda c: c.data.startswith('faq_q'), state=OnboardingStates.showing_faq)
async def process_faq_question(callback_query: types.CallbackQuery, state: FSMContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å FAQ."""
    await bot.answer_callback_query(callback_query.id)
    question_key = callback_query.data
    answer_key = question_key.replace('q', 'a') # faq_q1 -> faq_a1

    user_data = await state.get_data()
    role = user_data.get('chosen_role', 'referral')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞, –ø–æ–¥—Å—Ç–∞–≤–ª—è—è –Ω—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    answer_text = TEXTS_RU.get(answer_key, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω.")
    if '{regulation_url}' in answer_text:
        regulation_url = REFERRAL_REGULATIONS_URL if role == 'referral' else INTEGRATOR_REGULATIONS_URL
        answer_text = answer_text.format(regulation_url=regulation_url, cabinet_url=PARTNER_CABINET_URL)
    elif '{cabinet_url}' in answer_text:
         answer_text = answer_text.format(cabinet_url=PARTNER_CABINET_URL)


    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞—è –æ—Ç–≤–µ—Ç –∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    await callback_query.message.edit_text(answer_text, reply_markup=get_back_to_faq_kb(), disable_web_page_preview=True)
    await OnboardingStates.showing_faq_answer.set() # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –æ—Ç–≤–µ—Ç–∞

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º" –≤ FAQ
@dp.callback_query_handler(lambda c: c.data == 'faq_back', state=OnboardingStates.showing_faq_answer)
async def process_faq_back(callback_query: types.CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–ø–∏—Å–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤ FAQ."""
    # –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –ø–æ–∫–∞–∑–∞ FAQ, –æ–Ω —Å–∞–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    await process_show_faq(callback_query, state)


# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥/—Å–æ–æ–±—â–µ–Ω–∏–π ---
@dp.message_handler(state='*')
async def handle_unknown(message: types.Message, state: FSMContext):
    """–õ–æ–≤–∏—Ç –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥—Ä—É–≥–∏–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º."""
    current_state = await state.get_state()
    if current_state is None:
        await message.answer(TEXTS_RU["unknown_command"] + " –ù–∞—á–Ω–∏—Ç–µ —Å /start")
        return

    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è –≤—ã–±–æ—Ä —Ä–æ–ª–∏, –Ω–∞–ø–æ–º–Ω–∏—Ç—å –æ–± —ç—Ç–æ–º
    if current_state == OnboardingStates.awaiting_role.state:
         await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –≤—ã—à–µ.")
    elif current_state in [OnboardingStates.onboarding_referral.state, OnboardingStates.onboarding_integrator.state]:
         await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —á–µ–∫-–ª–∏—Å—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ –Ø –≥–æ—Ç–æ–≤(–∞)', –µ—Å–ª–∏ –≤—Å—ë –∏–∑—É—á–∏–ª–∏.")
    elif current_state == OnboardingStates.showing_faq.state:
         await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞ FAQ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.")
    elif current_state == OnboardingStates.showing_faq_answer.state:
         await message.answer("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º', —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ FAQ.")
    else:
         await message.answer(TEXTS_RU["unknown_command"] + " –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞: /start")


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == '__main__':
    logging.info("Starting bot...")
    executor.start_polling(dp, skip_updates=True)
    logging.info("Bot stopped.")
